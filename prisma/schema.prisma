generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model curso {
  id               Int                @id @default(autoincrement())
  titulo           String             @db.VarChar(255)
  imagen_src       String             @db.VarChar(255)
  progreso_usuario progreso_usuario[]
  unidad           unidad[]
}

model leccion {
  id        Int    @id @default(autoincrement())
  titulo    String @db.VarChar(255)
  orden     Int
  unidad_id Int
  unidad    unidad @relation(fields: [unidad_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  reto      reto[]

  @@index([unidad_id], map: "idx_leccion_unidad")
}

model logro {
  id                    Int              @id @default(autoincrement())
  titulo                String           @db.VarChar(255)
  descripcion           String           @db.VarChar(255)
  imagen_src            String           @db.VarChar(255)
  experiencia_requerida Int
  nivel_requerido       Int
  logro_obtenido        logro_obtenido[]
}

model logro_obtenido {
  id              Int      @id @default(autoincrement())
  fecha_obtencion DateTime @default(now()) @db.Timestamp(6)
  logro_id        Int
  usuario_id      Int
  logro           logro    @relation(fields: [logro_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuario         usuario  @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([logro_id], map: "idx_logro_obtenido_logro")
  @@index([usuario_id], map: "idx_logro_obtenido_usuario")
}

model opcion_reto {
  id         Int     @id @default(autoincrement())
  texto      String
  correcto   Boolean
  imagen_src String? @db.VarChar(255)
  audio_src  String? @db.VarChar(255)
  reto_id    Int
  reto       reto    @relation(fields: [reto_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([reto_id], map: "idx_opcion_reto_reto")
}

model progreso_reto {
  id         Int     @id @default(autoincrement())
  completado Boolean
  reto_id    Int
  usuario_id Int
  reto       reto    @relation(fields: [reto_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuario    usuario @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([reto_id], map: "idx_progreso_reto_reto")
  @@index([usuario_id], map: "idx_progreso_reto_usuario")
}

model progreso_usuario {
  id              Int     @id @default(autoincrement())
  curso_activo_id Int
  usuario_id      Int
  curso           curso   @relation(fields: [curso_activo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuario         usuario @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([curso_activo_id], map: "idx_progreso_usuario_curso")
  @@index([usuario_id], map: "idx_progreso_usuario_usuario")
}

model reto {
  id            Int             @id @default(autoincrement())
  tipo          String          @db.VarChar(20)
  pregunta      String
  orden         Int
  leccion_id    Int
  opcion_reto   opcion_reto[]
  progreso_reto progreso_reto[]
  leccion       leccion         @relation(fields: [leccion_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([leccion_id], map: "idx_reto_leccion")
}

model unidad {
  id          Int       @id @default(autoincrement())
  titulo      String    @db.VarChar(255)
  descripcion String
  orden       Int
  curso_id    Int
  leccion     leccion[]
  curso       curso     @relation(fields: [curso_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([curso_id], map: "idx_unidad_curso")
}

model usuario {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(255)
  email            String             @unique @db.VarChar(254)
  contrasena       String             @db.VarChar(255)
  fecha_creacion   DateTime?           @default(now()) @db.Timestamp(6)
  imagen_perfil    String?            @default("/default_user.png") @db.VarChar(255)  
  corazones        Int?                @default(5)
  puntos           Int?                @default(0)
  experiencia      Int?                @default(0)
  nivel            Int?                @default(1)
  tipo_usuario     String             @default("estudiante") @db.VarChar(10)
  logro_obtenido   logro_obtenido[]
  progreso_reto    progreso_reto[]
  progreso_usuario progreso_usuario[]
}
